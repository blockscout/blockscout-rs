//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub email: String,
    pub project_title: Option<String>,
    pub created_at: DateTime,
    pub is_superuser: bool,
    pub balance: Decimal,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::auth_tokens::Entity")]
    AuthTokens,
    #[sea_orm(has_many = "super::balance_expenses::Entity")]
    BalanceExpenses,
}

impl Related<super::auth_tokens::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AuthTokens.def()
    }
}

impl Related<super::balance_expenses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BalanceExpenses.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
