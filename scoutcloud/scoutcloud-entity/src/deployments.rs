//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use super::sea_orm_active_enums::DeploymentStatusType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "deployments")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub external_id: Uuid,
    pub instance_id: i32,
    pub server_spec_id: i32,
    #[sea_orm(column_type = "JsonBinary")]
    pub user_config: Json,
    #[sea_orm(column_type = "JsonBinary")]
    pub parsed_config: Json,
    pub created_at: DateTime,
    pub finished_at: Option<DateTime>,
    pub status: DeploymentStatusType,
    pub error: Option<String>,
    pub total_cost: Decimal,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::balance_expenses::Entity")]
    BalanceExpenses,
    #[sea_orm(
        belongs_to = "super::instances::Entity",
        from = "Column::InstanceId",
        to = "super::instances::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Instances2,
    #[sea_orm(
        belongs_to = "super::instances::Entity",
        from = "Column::InstanceId",
        to = "super::instances::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Instances1,
    #[sea_orm(
        belongs_to = "super::server_specs::Entity",
        from = "Column::ServerSpecId",
        to = "super::server_specs::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ServerSpecs2,
    #[sea_orm(
        belongs_to = "super::server_specs::Entity",
        from = "Column::ServerSpecId",
        to = "super::server_specs::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ServerSpecs1,
}

impl Related<super::balance_expenses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BalanceExpenses.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
