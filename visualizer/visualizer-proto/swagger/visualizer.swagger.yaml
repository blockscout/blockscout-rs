swagger: "2.0"
info:
  title: visualizer.proto
  version: version not set
tags:
  - name: SolidityVisualizer
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/solidity:visualize-contracts:
    post:
      operationId: SolidityVisualizer_VisualizeContracts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VisualizeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VisualizeContractsRequest'
      tags:
        - SolidityVisualizer
  /api/v1/solidity:visualize-storage:
    post:
      operationId: SolidityVisualizer_VisualizeStorage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VisualizeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VisualizeStorageRequest'
      tags:
        - SolidityVisualizer
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1VisualizeContractsRequest:
    type: object
    properties:
      sources:
        type: object
        additionalProperties:
          type: string
      outputMask:
        type: string
  v1VisualizeResponse:
    type: object
    properties:
      png:
        type: string
        format: byte
      svg:
        type: string
        format: byte
    description: |-
      The client should decide on what type they are interested in
      and specify it through `request.output_mask` field. If omitted,
      all types would be calculated and returned to the client.
  v1VisualizeStorageRequest:
    type: object
    properties:
      sources:
        type: object
        additionalProperties:
          type: string
      fileName:
        type: string
      contractName:
        type: string
      outputMask:
        type: string
