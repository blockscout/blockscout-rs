swagger: "2.0"
info:
  title: health/v1/health.proto
  version: version not set
tags:
  - name: Health
  - name: StylusSdkRsVerifier
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/stylus-sdk-rs/cargo-stylus-versions:
    get:
      operationId: StylusSdkRsVerifier_ListCargoStylusVersions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CargoStylusVersions'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - StylusSdkRsVerifier
  /api/v1/stylus-sdk-rs:verify-github-repository:
    post:
      operationId: StylusSdkRsVerifier_VerifyGithubRepository
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1VerifyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1VerifyGithubRepositoryRequest'
      tags:
        - StylusSdkRsVerifier
  /health:
    get:
      summary: |-
        Check gets the health of the specified service. If the requested service
        is unknown, the call will fail with status NOT_FOUND. If the caller does
        not specify a service name, the server should respond with its overall
        health status.
      description: |-
        Clients should set a deadline when calling Check, and can declare the
        server unhealthy if they do not receive a timely response.

        Check implementations should be idempotent and side effect free.
      operationId: Health_Check
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1HealthCheckResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: service
          in: query
          required: false
          type: string
      tags:
        - Health
definitions:
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - UNKNOWN
      - SERVING
      - NOT_SERVING
      - SERVICE_UNKNOWN
    default: UNKNOWN
    description: ' - SERVICE_UNKNOWN: Used only by the Watch method.'
  VerificationSuccessGithubRepositoryMetadata:
    type: object
    properties:
      repository_url:
        type: string
      commit:
        type: string
      path_prefix:
        type: string
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1CargoStylusVersion:
    type: object
    properties:
      version:
        type: string
  v1CargoStylusVersions:
    type: object
    properties:
      versions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CargoStylusVersion'
  v1HealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
  v1VerificationFailure:
    type: object
    properties:
      message:
        type: string
  v1VerificationSuccess:
    type: object
    properties:
      abi:
        type: string
      contract_name:
        type: string
      files:
        type: object
        additionalProperties:
          type: string
      package_name:
        type: string
      cargo_stylus_version:
        type: string
      github_repository_metadata:
        $ref: '#/definitions/VerificationSuccessGithubRepositoryMetadata'
        title: / Metadata added in case `VerifyGithubRepository` endpoint was used for verification
  v1VerifyGithubRepositoryRequest:
    type: object
    properties:
      deployment_transaction:
        type: string
      rpc_endpoint:
        type: string
      cargo_stylus_version:
        type: string
      repository_url:
        type: string
      commit:
        type: string
      path_prefix:
        type: string
  v1VerifyResponse:
    type: object
    properties:
      verification_failure:
        $ref: '#/definitions/v1VerificationFailure'
      verification_success:
        $ref: '#/definitions/v1VerificationSuccess'
