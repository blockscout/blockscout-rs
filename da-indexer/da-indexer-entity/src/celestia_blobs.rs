//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "celestia_blobs")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "Binary(BlobSize::Blob(None))"
    )]
    pub id: Vec<u8>,
    pub height: i64,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub namespace: Vec<u8>,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub commitment: Vec<u8>,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub data: Vec<u8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::celestia_blocks::Entity",
        from = "Column::Height",
        to = "super::celestia_blocks::Column::Height",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CelestiaBlocks,
}

impl Related<super::celestia_blocks::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CelestiaBlocks.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
