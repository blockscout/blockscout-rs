on:
  push:
    branches:
      - 'main'
    tags:
      - 'da-indexer/v*'
    paths:
      - da-indexer/**
      - .github/workflows/da-indexer.yml
      - .github/workflows/_*.yml
      - .github/actions/**
  pull_request:
    paths:
      - da-indexer/**
      - .github/workflows/da-indexer.yml
      - .github/workflows/_*.yml
      - .github/actions/**

name: Test, lint and docker (da-indexer)

defaults:
  run:
    working-directory: da-indexer

jobs:
  test:
    name: Unit, doc and integration tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      minio:
        # Official minio build requires the following command to be started
        # `minio server /data --address=0.0.0.0:9000`
        # Github actions do not support any custom command arguments, so the official image cannot be used.
        # `lazybit/minio` bypasses that restriction by including
        # `CMD ["server" "/data" "--address=0.0.0.0:9000"]` into the dockerfile.
        #
        # This solution was taken from https://stackoverflow.com/a/71855338.
        #
        # TODO: we probably would like to remove an non-official third-party image
        #       which is not regularly updated and replace it by our own image.
        image: lazybit/minio:latest
        ports:
          - 9000:9000
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup
        with:
          working-directory: da-indexer

      - name: Build
        id: build
        run: RUST_BACKTRACE=1 cargo test --no-run --locked --workspace --all-features

      - name: Unit tests
        run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked --workspace --all-features --lib --bins -- --nocapture
        if: steps.build.outcome == 'success'
        env:
          DATABASE_URL: postgres://postgres:admin@localhost:5432/
          S3_ENDPOINT: http://localhost:9000
          S3_ACCESS_KEY_ID: minioadmin
          S3_SECRET_ACCESS_KEY: minioadmin

      - name: Doc tests
        run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked --workspace --all-features --doc
        if: steps.build.outcome == 'success'

      # TODO: Uncomment when integration test added
      # - name: Integration tests
      #   run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked --workspace --test '*' -- --nocapture --include-ignored
      #   if: steps.build.outcome == 'success'
      #   env:
      #     DATABASE_URL: postgres://postgres:admin@localhost:5432/

  lint:
    name: Linting
    uses: ./.github/workflows/_linting.yml
    with:
      working-directory: da-indexer

  docker:
    name: Docker build and docker push
    needs:
      - test
      - lint
    if: |
      always() &&
      (needs.test.result == 'success' || needs.test.result == 'cancelled') &&
      (needs.lint.result == 'success' || needs.lint.result == 'cancelled')
    uses: ./.github/workflows/_docker-build-push.yml
    with:
      service-name: da-indexer
    secrets:
      ARM_RUNNER_HOSTNAME: ${{ secrets.ARM_RUNNER_HOSTNAME }}
      ARM_RUNNER_KEY: ${{ secrets.ARM_RUNNER_KEY }}

  push-swagger:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags'))
    uses: ./.github/workflows/_push_swagger.yml
    with:
      service_name: 'da-indexer'
      swagger_path: 'da-indexer/da-indexer-proto/swagger/v1/da-indexer.swagger.yaml'
    secrets:
      api_token_github: ${{ secrets.BLOCKSCOUT_BOT_TOKEN }}