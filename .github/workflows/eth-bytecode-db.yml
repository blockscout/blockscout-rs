on:
  push:
    branches:
      - 'main'
    tags:
      - 'eth-bytecode-db/v*'
    paths:
      - eth-bytecode-db/**
      - .github/workflows/eth-bytecode-db.yml
      - .github/actions/deps/**
      - .github/workflows/_*.yml
  pull_request:
    paths:
      - eth-bytecode-db/**
      - .github/workflows/eth-bytecode-db.yml
      - .github/actions/deps/**
      - .github/workflows/_*.yml

name: Test, lint and docker (eth-bytecode-db)

defaults:
  run:
    working-directory: eth-bytecode-db

jobs:
  test:
    name: Unit, doc and integration tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgres
        ports:
          - 5432:5432

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set postgres max_connections
        run: |
          psql -h localhost -p 5432 -c "ALTER SYSTEM SET max_connections = 500;" -d postgres
        env:
          PGPASSWORD: admin
          PGUSER: postgres

      - name: Restart postgres
        # Restart Postgres so that new system parameters to be applied
        uses: docker://docker
        with:
          args: docker restart postgres

      - name: Install deps
        uses: ./.github/actions/deps

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: eth-bytecode-db -> target

      - name: Unit tests
        run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked --workspace --all-features --lib --bins -- --nocapture
        if: success() || failure()

      - name: Doc tests
        run: cargo test --locked --workspace --all-features --doc
        if: success() || failure()

      - name: Integration tests
        run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked --workspace --test '*' -- --nocapture --include-ignored
        if: success() || failure()
        env:
          DATABASE_URL: postgres://postgres:admin@localhost:5432/

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install deps
        uses: ./.github/actions/deps

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          override: true

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: eth-bytecode-db -> target

      - name: cargo fmt
        run: cargo fmt --all -- --check --config imports_granularity=Crate

      - name: cargo clippy
        run: cargo clippy --all --all-targets --all-features -- -D warnings

  docker:
    name: Docker build and docker push
    needs:
      - test
      - lint
    if: |
      always() &&
      (needs.test.result == 'success' || needs.test.result == 'cancelled') &&
      (needs.lint.result == 'success' || needs.lint.result == 'cancelled')
    uses: ./.github/workflows/_docker-build-push.yml
    with:
      service-name: eth-bytecode-db
