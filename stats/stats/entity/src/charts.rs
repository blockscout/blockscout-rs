//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.4

use super::sea_orm_active_enums::ChartValueType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "charts")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: Option<String>,
    pub r#type: Option<ChartValueType>,
    pub last_updated_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::chart_data_double::Entity")]
    ChartDataDouble,
    #[sea_orm(has_many = "super::chart_data_int::Entity")]
    ChartDataInt,
}

impl Related<super::chart_data_double::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChartDataDouble.def()
    }
}

impl Related<super::chart_data_int::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChartDataInt.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
