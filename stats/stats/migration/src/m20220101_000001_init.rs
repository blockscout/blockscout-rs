use sea_orm_migration::prelude::*;

#[derive(DeriveMigrationName)]
pub struct Migration;

#[async_trait::async_trait]
impl MigrationTrait for Migration {
    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        let sql = r#"
CREATE TYPE "chart_type" AS ENUM (
  'COUNTER',
  'LINE'
);

CREATE TYPE "chart_value_type" AS ENUM (
  'INT',
  'DOUBLE'
);

CREATE TABLE "charts" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(256) UNIQUE NOT NULL,
  "chart_type" chart_type NOT NULL,
  "value_type" chart_value_type NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "chart_data_int" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "chart_id" int NOT NULL,
  "date" date NOT NULL,
  "value" bigint NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "chart_data_double" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "chart_id" int NOT NULL,
  "date" date NOT NULL,
  "value" double precision NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now())
);

CREATE UNIQUE INDEX ON "chart_data_int" ("chart_id", "date");

CREATE UNIQUE INDEX ON "chart_data_double" ("chart_id", "date");

COMMENT ON TABLE "charts" IS 'Table contains chart description and sync info';

COMMENT ON TABLE "chart_data_int" IS 'Table for integer charts points';

COMMENT ON TABLE "chart_data_double" IS 'Table for floating point charts points';

ALTER TABLE "chart_data_int" ADD FOREIGN KEY ("chart_id") REFERENCES "charts" ("id");

ALTER TABLE "chart_data_double" ADD FOREIGN KEY ("chart_id") REFERENCES "charts" ("id");
        "#;
        crate::from_sql(manager, sql).await
    }

    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        let sql = r#"
DROP TABLE "chart_data_double";

DROP TABLE "chart_data_int";

DROP TABLE "charts";

DROP TYPE "chart_value_type";

DROP TYPE "chart_type";
        "#;
        crate::from_sql(manager, sql).await
    }
}
