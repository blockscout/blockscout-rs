syntax = "proto3";

package blockscout.stats.v1;

import "protoc-gen-openapiv2/options/annotations.proto";


option go_package = "github.com/blockscout/blockscout-rs/stats";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Stats service";
    contact: {
      name: "Blockscout";
      url: "https://blockscout.com";
      email: "support@blockscout.com";
    };
  };
  schemes: [HTTPS],
  external_docs: {
    url: "https://github.com/blockscout/blockscout-rs";
    description: "More about blockscout microservices";
  }
  security_definitions: {
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "x-api-key";
      }
    }
  }
};


service StatsService {
  rpc GetCounters(GetCountersRequest) returns (Counters);
  rpc GetLineCharts(GetLineChartsRequest) returns (LineCharts);
  rpc GetLineChart(GetLineChartRequest) returns (LineChart);
  rpc GetMainPageStats(GetMainPageStatsRequest) returns (MainPageStats);
  rpc GetTransactionsPageStats(GetTransactionsPageStatsRequest) returns (TransactionsPageStats);
  rpc GetContractsPageStats(GetContractsPageStatsRequest) returns (ContractsPageStats);
  rpc BatchUpdateCharts(BatchUpdateChartsRequest) returns (BatchUpdateChartsResult) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {key: "ApiKeyAuth"}
      }
      tags: "Instances"
    };
  };
}

message GetCountersRequest {}

message Counter {
  string id = 1;
  string value = 2;
  string title = 3;
  optional string units = 4;
  string description = 5;
}

message Counters { repeated Counter counters = 1; }

enum Resolution {
  RESOLUTION_UNSPECIFIED = 0;
  DAY = 1;
  WEEK = 2;
  MONTH = 3;
  YEAR = 4;
}

message GetLineChartsRequest {}

// todo: replace LineChartInfo::resolutions with enum when supported
// (probably this https://github.com/blockscout/actix-prost/pull/24/files)

message LineChartInfo {
  string id = 1;
  string title = 2;
  string description = 3;
  optional string units = 4;
  repeated string resolutions = 5;
}

message LineChartSection {
  string id = 1;
  string title = 2;
  repeated LineChartInfo charts = 3;
}

message LineCharts { repeated LineChartSection sections = 1; }

message GetLineChartRequest {
  string name = 1;
  // Default is first data point
  optional string from = 2;
  // Default is last data point
  optional string to = 3;
  Resolution resolution = 4;
}

// All integers are encoded as strings to prevent data loss
message Point {
  string date = 1;
  string date_to = 4;
  string value = 2;
  bool is_approximate = 3;
}

message LineChart {
  repeated Point chart = 1;
  LineChartInfo info = 2;
}

message GetMainPageStatsRequest {}

message MainPageStats {
  optional Counter average_block_time = 1;
  optional Counter total_addresses = 2;
  optional Counter total_blocks = 3;
  optional Counter total_transactions = 4;
  optional Counter yesterday_transactions = 5;
  optional Counter total_operational_transactions = 6;
  optional Counter yesterday_operational_transactions = 7;

  optional LineChart daily_new_transactions = 8;
  optional LineChart daily_new_operational_transactions = 9;
}

message GetTransactionsPageStatsRequest {}

message TransactionsPageStats {
  optional Counter pending_transactions_30m = 1;
  optional Counter transactions_fee_24h = 2;
  optional Counter average_transactions_fee_24h = 3;
  optional Counter transactions_24h = 4;
  optional Counter operational_transactions_24h = 5;
}

message GetContractsPageStatsRequest {}

message ContractsPageStats {
  optional Counter total_contracts = 1;
  optional Counter new_contracts_24h = 2;
  optional Counter total_verified_contracts = 3;
  optional Counter new_verified_contracts_24h = 4;
}

message BatchUpdateChartsRequest {
  repeated string chart_names = 1;
  // Default is today
  optional string from = 2;
  optional bool update_later = 3;
}

message BatchUpdateChartRejection {
  string name = 1;
  string reason = 2;
}

message BatchUpdateChartsResult {
  uint32 total = 1;
  uint32 total_rejected = 2;
  repeated string accepted = 3;
  repeated BatchUpdateChartRejection rejected = 4;
}
