{
    "_comment": "A simple storage contract compiled with `\"bytecodeHash\": \"none\"` setting",
    "creation_bytecode": "0x608060405234801561001057600080fd5b50610127806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632e64cec11461003b5780636057361d14610059575b600080fd5b610043610075565b60405161005091906100a1565b60405180910390f35b610073600480360381019061006e91906100ed565b61007e565b005b60008054905090565b8060008190555050565b6000819050919050565b61009b81610088565b82525050565b60006020820190506100b66000830184610092565b92915050565b600080fd5b6100ca81610088565b81146100d557600080fd5b50565b6000813590506100e7816100c1565b92915050565b600060208284031215610103576101026100bc565b5b6000610111848285016100d8565b9150509291505056fea164736f6c6343000812000a",
    "deployed_bytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80632e64cec11461003b5780636057361d14610059575b600080fd5b610043610075565b60405161005091906100a1565b60405180910390f35b610073600480360381019061006e91906100ed565b61007e565b005b60008054905090565b8060008190555050565b6000819050919050565b61009b81610088565b82525050565b60006020820190506100b66000830184610092565b92915050565b600080fd5b6100ca81610088565b81146100d557600080fd5b50565b6000813590506100e7816100c1565b92915050565b600060208284031215610103576101026100bc565b5b6000610111848285016100d8565b9150509291505056fea164736f6c6343000812000a",
    "compiler_version": "v0.8.18+commit.87f61d96",
    "file_name": "contracts/1_Storage.sol",
    "contract_name": "Storage",
    "input": {
        "language": "Solidity",
        "sources": {
            "contracts/1_Storage.sol": {
                "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n */\ncontract Storage {\n\n    uint256 number;\n\n    /**\n     * Some user related comment.\n     * @dev Store value in variable\n     * @param num value to store\n     */\n    function store(uint256 num) public {\n        number = num;\n    }\n\n    /**\n     * @dev Return value \n     * @return value of 'number'\n     */\n    function retrieve() public view returns (uint256){\n        return number;\n    }\n}"
            }
        },
        "settings": {
            "optimizer": {
                "enabled": false,
                "runs": 200
            },
            "libraries": {},
            "metadata": {
                "bytecodeHash": "none"
            },
            "outputSelection": { "*": { "*": [ "*" ], "": [ "*" ] } }
        }
    },
    "expected_compiler_artifacts": {
        "abi": [{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"store","outputs":[],"stateMutability":"nonpayable","type":"function"}],
        "userdoc": {"kind":"user","methods":{"store(uint256)":{"notice":"Some user related comment."}},"version":1},
        "devdoc": {"details":"Store & retrieve value in a variable","kind":"dev","methods":{"retrieve()":{"details":"Return value ","returns":{"_0":"value of 'number'"}},"store(uint256)":{"details":"Store value in variable","params":{"num":"value to store"}}},"title":"Storage","version":1},
        "storageLayout": {"storage":[{"astId":4,"contract":"contracts/1_Storage.sol:Storage","label":"number","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},
        "sources": {"contracts/1_Storage.sol": {"id":  0} }
    },
    "expected_creation_input_artifacts": {
        "sourceMap": "141:390:0:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {},
        "cborAuxdata": {
            "0": {
                "offset": 315,
                "value": "0xa164736f6c6343000812000a"
            }
        }
    },
    "expected_deployed_bytecode_artifacts": {
        "sourceMap": "141:390:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;305:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;450:79;491:7;516:6;;509:13;;450:79;:::o;305:64::-;359:3;350:6;:12;;;;305:64;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o",
        "linkReferences": {},
        "immutableReferences": {},
        "cborAuxdata": {
            "0": {
                "offset": 283,
                "value": "0xa164736f6c6343000812000a"
            }
        }
    },

    "is_full_match": false
}
