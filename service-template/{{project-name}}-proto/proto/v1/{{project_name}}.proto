syntax = "proto3";

package blockscout.{{projectName}}.v1;

option go_package = "github.com/blockscout/blockscout-rs/{{project-name}}";

import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "convert/convert_options.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "{{project-name-title}} service"
    version: "0.1.1"
    contact: {
      name: "Blockscout"
      url: "https://blockscout.com"
      email: "support@blockscout.com"
    }
  }
  host: "{{project-name}}.services.blockscout.com"
  schemes: [HTTPS]
  external_docs: {
    url: "https://github.com/blockscout/blockscout-rs"
    description: "More about blockscout microservices"
  }
  security_definitions: {
    security: {
      key: "ApiKeyAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "x-api-key"
      }
    }
  }
};


{% if proto_ex %}
service {{ProtoExName}} {
  rpc {{ProtoExName}}Create({{ProtoExName}}CreateRequest) returns ({{ProtoExName}}CreateResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {key: "ApiKeyAuth"}
      }
    };
  }
  rpc {{ProtoExName}}Search({{ProtoExName}}SearchRequest) returns ({{ProtoExName}}SearchResponse) {}
  
}

message Item {
  string id = 1;
  string name = 2;
}

message {{ProtoExName}}CreateRequest {
  string foo = 1;
  optional string bar = 2;
  int64 timestamp = 3;
  map<string, string> map = 4;
  optional string url = 5 [(convert_options.convert) = {type: "Option<url::Url>"}];
}

message {{ProtoExName}}CreateResponse {
  Item item = 1;
}



message {{ProtoExName}}SearchRequest {
  string filter_1 = 1;
  string filter_2 = 2;
  string filter_3 = 3;
}

message {{ProtoExName}}SearchResponse {
  repeated Item items = 1;
}



{% endif %}