//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use super::sea_orm_active_enums::StatusEnum;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "operation")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub op_type: Option<String>,
    pub timestamp: DateTime,
    pub next_retry: Option<DateTime>,
    pub status: StatusEnum,
    pub retry_count: i16,
    pub inserted_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::operation_stage::Entity")]
    OperationStage,
}

impl Related<super::operation_stage::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OperationStage.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
