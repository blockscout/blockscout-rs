//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "revert_options")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub cross_chain_tx_id: i32,
    pub revert_address: Option<String>,
    pub call_on_revert: bool,
    pub abort_address: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub revert_message: Option<String>,
    pub revert_gas_limit: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::cross_chain_tx::Entity",
        from = "Column::CrossChainTxId",
        to = "super::cross_chain_tx::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    CrossChainTx,
}

impl Related<super::cross_chain_tx::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CrossChainTx.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
