//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use super::sea_orm_active_enums::CoinType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "token")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub zrc20_contract_address: String,
    pub asset: String,
    pub foreign_chain_id: i32,
    pub decimals: i32,
    pub name: String,
    pub symbol: String,
    pub coin_type: CoinType,
    pub gas_limit: String,
    pub paused: bool,
    pub liquidity_cap: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub icon_url: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::cross_chain_tx::Entity")]
    CrossChainTx,
}

impl Related<super::cross_chain_tx::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CrossChainTx.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
