//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "compiled_contracts")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    pub created_by: String,
    pub updated_by: String,
    pub compiler: String,
    pub version: String,
    pub language: String,
    pub name: String,
    pub fully_qualified_name: String,
    #[sea_orm(column_type = "JsonBinary")]
    pub sources: Json,
    #[sea_orm(column_type = "JsonBinary")]
    pub compiler_settings: Json,
    #[sea_orm(column_type = "JsonBinary")]
    pub compilation_artifacts: Json,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub creation_code_hash: Vec<u8>,
    #[sea_orm(column_type = "JsonBinary")]
    pub creation_code_artifacts: Json,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub runtime_code_hash: Vec<u8>,
    #[sea_orm(column_type = "JsonBinary")]
    pub runtime_code_artifacts: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::code::Entity",
        from = "Column::CreationCodeHash",
        to = "super::code::Column::CodeHash",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Code2,
    #[sea_orm(
        belongs_to = "super::code::Entity",
        from = "Column::RuntimeCodeHash",
        to = "super::code::Column::CodeHash",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Code1,
    #[sea_orm(has_many = "super::verified_contracts::Entity")]
    VerifiedContracts,
}

impl Related<super::verified_contracts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::VerifiedContracts.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
