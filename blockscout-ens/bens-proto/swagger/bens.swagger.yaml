swagger: "2.0"
info:
  title: bens.proto
  version: version not set
tags:
  - name: DomainsExtractor
  - name: Health
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/{chainId}/addresses:batch-resolve:
    post:
      operationId: DomainsExtractor_BatchResolveAddresses
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BatchResolveAddressesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              addresses:
                type: array
                items:
                  type: string
                title: List of requested addresses
              domainView:
                $ref: '#/definitions/v1DomainView'
                description: Specifies how much information about corresponding domains should be returned.
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/addresses:resolve:
    post:
      operationId: DomainsExtractor_ResolveAddress
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ResolveAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: uint64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              address:
                type: string
                title: Address of EOA or contract
              domainView:
                $ref: '#/definitions/v1DomainView'
                description: Specifies how much information about corresponding domain should be returned.
              ownedBy:
                type: boolean
                title: Include domains owned by the address
              resolvedTo:
                type: boolean
                title: Include domains resolved to the address
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/domains/{domainId}/domain-events:
    get:
      operationId: DomainsExtractor_ListDomainEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListDomainEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: uint64
        - name: domainId
          description: Unique id for the domain, also known as nodehash
          in: path
          required: true
          type: string
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/domains/{id}:
    get:
      operationId: DomainsExtractor_GetDomain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1Domain'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: uint64
        - name: id
          description: Unique id for the domain, also known as nodehash
          in: path
          required: true
          type: string
        - name: domainView
          description: |-
            Specifies how much information about domain should be returned.

             - DOMAIN_VIEW_UNSPECIFIED: The default / unset value.
            The API will default to the BASIC view.
             - DOMAIN_VIEW_BASIC: Include basic metadata about the domain, but not the full contents.
            (id, name, resolved_address, expiry_date)
             - DOMAIN_VIEW_FULL: Include everything.
            This is the default value.
          in: query
          required: false
          type: string
          enum:
            - DOMAIN_VIEW_UNSPECIFIED
            - DOMAIN_VIEW_BASIC
            - DOMAIN_VIEW_FULL
          default: DOMAIN_VIEW_UNSPECIFIED
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/domains:batch-resolve:
    post:
      operationId: DomainsExtractor_BatchResolveDomainNames
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BatchResolveDomainNamesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              domainView:
                $ref: '#/definitions/v1DomainView'
                description: Specifies how much information about domains should be returned.
              names:
                type: array
                items:
                  type: string
                title: List of requested domain names
      tags:
        - DomainsExtractor
  /api/v1/{chainId}/domains:resolve:
    post:
      operationId: DomainsExtractor_ResolveDomainName
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ResolveDomainNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chainId
          description: The chain (network) where domain search should be done
          in: path
          required: true
          type: string
          format: uint64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              domainView:
                $ref: '#/definitions/v1DomainView'
                description: Specifies how much information about domain should be returned.
              name:
                type: string
                title: Name of domain, for example vitalik.eth
      tags:
        - DomainsExtractor
  /health:
    get:
      summary: |-
        If the requested service is unknown, the call will fail with status
        NOT_FOUND.
      operationId: Health_Check
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1HealthCheckResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: service
          in: query
          required: false
          type: string
      tags:
        - Health
definitions:
  BatchResolveAddressesResponseDomains:
    type: object
    properties:
      domains:
        type: array
        items:
          $ref: '#/definitions/v1Domain'
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - UNKNOWN
      - SERVING
      - NOT_SERVING
      - SERVICE_UNKNOWN
    default: UNKNOWN
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
      message:
        type: string
  v1BatchResolveAddressesResponse:
    type: object
    properties:
      domains:
        type: object
        additionalProperties:
          $ref: '#/definitions/BatchResolveAddressesResponseDomains'
  v1BatchResolveDomainNamesResponse:
    type: object
    properties:
      domains:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1Domain'
  v1Domain:
    type: object
    properties:
      expiryDate:
        type: string
        format: uint64
        title: Optinal. Unix timestamp of expiry date. None means never expires
      id:
        type: string
        title: Unique id for the domain, also known as nodehash
      name:
        type: string
        title: The human readable name, if known. Unknown portions replaced with hash in square brackets (eg, foo.[1234].eth)
      otherAddresses:
        type: object
        additionalProperties:
          type: string
        title: |-
          Map chain -> resolved_address that contains other blockchain addresses.
          This map will contain `current_chain_id` -> `resovled_address` if `resovled_address` is not None
      owner:
        type: string
        title: The account that owns the domain
      registrant:
        type: string
        title: Optinal. The account that owns the ERC721 NFT for the domain
      registrationDate:
        type: string
        format: uint64
        title: Unix timestamp of regisration date
      resolvedAddress:
        type: string
        title: Optinal. Resolved address of this domain
      tokenId:
        type: string
        format: uint64
        title: Integer representation of labelhash
  v1DomainEvent:
    type: object
    properties:
      action:
        type: string
        title: Optinal. Action name
      fromAddress:
        type: string
        title: /Sender of transaction
      timestamp:
        type: string
        format: uint64
        title: Timestamp of this transaction
      transactionHash:
        type: string
        title: Transaction hash where action occured
  v1DomainView:
    type: string
    enum:
      - DOMAIN_VIEW_UNSPECIFIED
      - DOMAIN_VIEW_BASIC
      - DOMAIN_VIEW_FULL
    default: DOMAIN_VIEW_UNSPECIFIED
    description: |2-
       - DOMAIN_VIEW_UNSPECIFIED: The default / unset value.
      The API will default to the BASIC view.
       - DOMAIN_VIEW_BASIC: Include basic metadata about the domain, but not the full contents.
      (id, name, resolved_address, expiry_date)
       - DOMAIN_VIEW_FULL: Include everything.
      This is the default value.
  v1HealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
  v1ListDomainEventsResponse:
    type: object
    properties:
      domainEvents:
        type: array
        items:
          $ref: '#/definitions/v1DomainEvent'
  v1ResolveAddressResponse:
    type: object
    properties:
      owned:
        type: array
        items:
          $ref: '#/definitions/v1Domain'
        title: List of domains owned by requested address
      resolved:
        type: array
        items:
          $ref: '#/definitions/v1Domain'
        title: |-
          List of domains that resolved to requested address
          Sorted by relevance, so first address could be displayed as main resolved address
  v1ResolveDomainNameResponse:
    type: object
    properties:
      domain:
        $ref: '#/definitions/v1Domain'
        description: |-
          Basic domain info.
          May be empty in case if domain name haven't been resolved.
          The caller should check that `domain.id` is not zero.
      domainEvents:
        type: array
        items:
          $ref: '#/definitions/v1DomainEvent'
        description: List of domain events. Is empty, if BASIC domain view have been requested.
