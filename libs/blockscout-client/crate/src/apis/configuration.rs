/*
 
 * BlockScout API
 *
 
 
 * API for BlockScout web app
 *
 
 * The version of the OpenAPI document: {size=68, empty=false}
 * Contact: lymarenko.lev@blockscout.com
 * Generated by: https://openapi-generator.tech
 */





#[derive(Debug, Clone)]
pub struct Configuration {
    pub base_path: String,
    pub user_agent: Option<String>,
    pub client: reqwest_middleware::ClientWithMiddleware,
    
    pub basic_auth: Option<BasicAuth>,
    pub oauth_access_token: Option<String>,
    pub bearer_access_token: Option<String>,
    pub api_key: Option<ApiKey>,
    
    
    
}


pub type BasicAuth = (String, Option<String>);

#[derive(Debug, Clone)]
pub struct ApiKey {
    pub prefix: Option<String>,
    pub key: String,
}




impl Configuration {
    pub fn new() -> Configuration {
        Configuration::default()
    }

    // changed
    pub fn with_base_path(&mut self, base_path: impl Into<String>) -> &mut Self {
        self.base_path = base_path.into();
        self
    }

    // changed
    pub fn with_user_agent(&mut self, user_agent: impl Into<String>) -> &mut Self {
        self.user_agent = Some(user_agent.into());
        self
    }

    // changed
    pub fn with_client(&mut self, client: reqwest_middleware::ClientWithMiddleware) -> &mut Self {
        self.client = client;
        self
    }

    // changed
    
    pub fn with_basic_auth(&mut self, username: impl Into<String>, password: Option<impl Into<String>>) -> &mut Self {
        self.basic_auth = Some((username.into(), password.map(|p| p.into())));
        self
    }

    // changed
    pub fn with_oauth_access_token(&mut self, oauth_access_token: impl Into<String>) -> &mut Self {
        self.oauth_access_token = Some(oauth_access_token.into());
        self
    }

    // changed
    pub fn with_bearer_access_token(&mut self, bearer_access_token: impl Into<String>) -> &mut Self {
        self.bearer_access_token = Some(bearer_access_token.into());
        self
    }

    // changed
    pub fn with_api_key(&mut self, prefix: Option<String>, key: impl Into<String>) -> &mut Self {
        self.api_key = Some(ApiKey {
            prefix,
            key: key.into(),
        });
        self
    }
    

    

    
}

impl Default for Configuration {
    fn default() -> Self {
        Configuration {
            base_path: "https://eth.blockscout.com".to_owned(),
            user_agent: Some("OpenAPI-Generator/1.0.0/rust".to_owned()),
            client: reqwest_middleware::ClientBuilder::new(reqwest::Client::new()).build(),
            
            basic_auth: None,
            oauth_access_token: None,
            bearer_access_token: None,
            api_key: None,
            
            
            
        }
    }
}

