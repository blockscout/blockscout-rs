/*

* BlockScout API
*


* API for BlockScout web app
*

* The version of the OpenAPI document: 1.0.0
* Contact: lymarenko.lev@blockscout.com
* Generated by: https://openapi-generator.tech
*/

use crate::models;
use serde::{Deserialize, Serialize};
use serde_aux::prelude::*;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, derive_new::new)]
pub struct SmartContract {
    #[serde(default)]
    pub verified_twin_address_hash: Option<String>,

    #[serde(default)]
    pub is_verified: Option<bool>,

    #[serde(default)]
    pub is_changed_bytecode: Option<bool>,

    #[serde(default)]
    pub is_partially_verified: Option<bool>,

    #[serde(default)]
    pub is_fully_verified: Option<bool>,

    #[serde(default)]
    pub is_verified_via_sourcify: Option<bool>,

    #[serde(default)]
    pub is_verified_via_eth_bytecode_db: Option<bool>,

    #[serde(default)]
    pub is_self_destructed: Option<bool>,

    #[serde(default)]
    pub can_be_visualized_via_sol2uml: Option<bool>,

    #[serde(default)]
    pub minimal_proxy_address_hash: Option<String>,

    #[serde(default)]
    pub sourcify_repo_url: Option<String>,

    #[serde(default)]
    pub name: Option<String>,

    #[serde(default)]
    pub optimization_enabled: Option<bool>,

    #[serde(deserialize_with = "deserialize_option_number_from_string")]
    #[serde(default)]
    pub optimizations_runs: Option<i32>,

    #[serde(default)]
    pub compiler_version: Option<String>,

    #[serde(default)]
    pub evm_version: Option<String>,

    #[serde(default)]
    pub verified_at: Option<String>,

    #[serde(default)]
    pub abi: Option<String>,

    #[serde(default)]
    pub source_code: Option<String>,

    #[serde(default)]
    pub file_path: Option<String>,

    #[serde(default)]
    pub compiler_settings: Option<serde_json::Value>,

    #[serde(default)]
    pub constructor_args: Option<String>,

    #[serde(default)]
    pub additional_sources: Option<Vec<models::ContractSource>>,

    #[serde(default)]
    pub decoded_constructor_args: Option<Vec<serde_json::Value>>,

    #[serde(default)]
    pub deployed_bytecode: Option<String>,

    #[serde(default)]
    pub creation_bytecode: Option<String>,

    #[serde(default)]
    pub external_libraries: Option<Vec<models::ExternalLibrary>>,

    #[serde(default)]
    pub language: Option<String>,

    #[serde(default)]
    pub status: Option<String>,
}
