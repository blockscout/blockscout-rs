/*
 * BlockScout API
 *
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddressNftCollection {
    #[serde(rename = "token")]
    pub token: models::TokenInfo,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "token_instances")]
    pub token_instances: Vec<models::AddressNftInstanceCollection>,
}

impl AddressNftCollection {
    pub fn new(
        token: models::TokenInfo,
        token_instances: Vec<models::AddressNftInstanceCollection>,
    ) -> AddressNftCollection {
        AddressNftCollection {
            token,
            amount: None,
            token_instances,
        }
    }
}
