/*
 * BlockScout API
 *
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionReward {
    #[serde(rename = "types")]
    pub types: serde_json::Value,
    #[serde(rename = "emission_reward")]
    pub emission_reward: String,
    #[serde(rename = "block_hash")]
    pub block_hash: String,
    #[serde(rename = "from")]
    pub from: models::AddressParam,
    #[serde(rename = "to")]
    pub to: models::AddressParam,
}

impl TransactionReward {
    pub fn new(
        types: serde_json::Value,
        emission_reward: String,
        block_hash: String,
        from: models::AddressParam,
        to: models::AddressParam,
    ) -> TransactionReward {
        TransactionReward {
            types,
            emission_reward,
            block_hash,
            from,
            to,
        }
    }
}
