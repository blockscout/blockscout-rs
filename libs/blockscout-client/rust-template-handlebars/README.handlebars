# Rust API client for {{{packageName}}}

{{#with appDescriptionWithNewLines}}
{{{.}}}
{{/with}}

{{#if infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/if}}

## Overview

This API client was generated by the [OpenAPI Generator](https://openapi-generator.tech) project.  By using the [openapi-spec](https://openapis.org) from a remote server, you can easily generate an API client.

- API version: {{{appVersion}}}
- Package version: {{{packageVersion}}}
{{#unless hideGenerationTimestamp}}
- Build date: {{{generatedDate}}}
{{/unless}}
- Generator version: {{generatorVersion}}
- Build package: `{{{generatorClass}}}`

## Installation

Put the package under your project folder in a directory named `{{packageName}}` and add the following to `Cargo.toml` under `[dependencies]`:

```
{{{packageName}}} = { path = "./{{{packageName}}}" }
```

## Documentation for API Endpoints

All URIs are relative to *{{{basePath}}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#with apiInfo}}{{#each apis}}{{#with operations}}{{#each operation}}*{{{classname}}}* | [**{{{operationId}}}**]({{{apiDocPath}}}{{classname}}.md#{{{operationIdLowerCase}}}) | **{{{httpMethod}}}** {{{path}}} | {{{summary}}}
{{/each}}{{/with}}{{/each}}{{/with}}

## Documentation For Models

{{#each models}}{{#with model}} - [{{{classname}}}]({{{modelDocPath}}}{{{classname}}}.md)
{{/with}}{{/each}}

To get access to the crate's generated documentation, use:

```
cargo doc --open
```

## Author

{{#with apiInfo}}{{#each apis}}{{#if @last}}{{{infoEmail}}}
{{/if}}{{/each}}{{/with}}
