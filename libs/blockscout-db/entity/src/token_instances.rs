//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "token_instances")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "Decimal(Some((78, 0)))"
    )]
    pub token_id: Decimal,
    #[sea_orm(primary_key, auto_increment = false)]
    pub token_contract_address_hash: Vec<u8>,
    pub metadata: Option<Json>,
    pub inserted_at: DateTime,
    pub updated_at: DateTime,
    pub error: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tokens::Entity",
        from = "Column::TokenContractAddressHash",
        to = "super::tokens::Column::ContractAddressHash",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Tokens,
}

impl Related<super::tokens::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Tokens.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
