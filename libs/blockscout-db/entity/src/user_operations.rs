//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use super::sea_orm_active_enums::{EntryPointVersion, SponsorType};
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_operations")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "VarBinary(StringLen::None)"
    )]
    pub hash: Vec<u8>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub sender: Vec<u8>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub nonce: Vec<u8>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub init_code: Option<Vec<u8>>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub call_data: Vec<u8>,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub call_gas_limit: Decimal,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub verification_gas_limit: Decimal,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub pre_verification_gas: Decimal,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub max_fee_per_gas: Decimal,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub max_priority_fee_per_gas: Decimal,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub paymaster_and_data: Option<Vec<u8>>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub signature: Vec<u8>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub aggregator: Option<Vec<u8>>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub aggregator_signature: Option<Vec<u8>>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub entry_point: Vec<u8>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub transaction_hash: Vec<u8>,
    pub block_number: i32,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub block_hash: Vec<u8>,
    pub bundle_index: i32,
    pub index: i32,
    pub user_logs_start_index: i32,
    pub user_logs_count: i32,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub bundler: Vec<u8>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub factory: Option<Vec<u8>>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub paymaster: Option<Vec<u8>>,
    pub status: bool,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub revert_reason: Option<Vec<u8>>,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub gas: Decimal,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub gas_price: Decimal,
    #[sea_orm(column_type = "Decimal(Some((100, 0)))")]
    pub gas_used: Decimal,
    pub sponsor_type: SponsorType,
    pub inserted_at: DateTime,
    pub updated_at: DateTime,
    pub entry_point_version: EntryPointVersion,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
