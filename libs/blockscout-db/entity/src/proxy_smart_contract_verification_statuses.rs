//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "proxy_smart_contract_verification_statuses")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uid: String,
    pub status: i16,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub contract_address_hash: Option<Vec<u8>>,
    pub inserted_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::smart_contracts::Entity",
        from = "Column::ContractAddressHash",
        to = "super::smart_contracts::Column::AddressHash",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    SmartContracts,
}

impl Related<super::smart_contracts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SmartContracts.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
